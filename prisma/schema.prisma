// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                  Int         @id @default(autoincrement())
  nombres             String      @db.VarChar(255)
  apellidos           String      @db.VarChar(255)
  email               String      @unique @db.VarChar(255)
  documento           String      @db.VarChar(20)
  telefono            String      @db.VarChar(20)
  password            String      @db.VarChar(100)
  activo              Boolean     @default(true) @db.TinyInt
  fecha_creacion      DateTime    @default(now())
  fecha_modificacion  DateTime    @updatedAt
  empresa             Empresa     @relation(fields: [empresa_id], references: [id])
  empresa_id          Int
  facturas            Factura[]
  roles               UsuarioRol[]
}

model Rol {
  id                  Int           @id @default(autoincrement())
  nombre              String        @db.VarChar(255)
  fecha_creacion      DateTime      @default(now())
  fecha_modificacion  DateTime      @updatedAt
  usuarios            UsuarioRol[]
}

model UsuarioRol {
  @@map("usuario_rol")
  id                  Int       @id @default(autoincrement())
  usuario             Usuario   @relation(fields: [usuario_id], references: [id])
  usuario_id          Int
  rol                 Rol       @relation(fields: [rol_id], references: [id])
  rol_id              Int
  fecha_creacion      DateTime  @default(now())
  fecha_modificacion  DateTime  @updatedAt
}

model Empresa {
  id                  Int             @id @default(autoincrement())
  ruc                 String          @db.VarChar(255)
  nombre_empresa      String          @db.VarChar(255)
  timbrado            String          @db.VarChar(255)
  direccion           String          @db.VarChar(255)
  vigente_desde       DateTime
  telefono            String          @db.VarChar(20)
  email               String          @db.VarChar(255)
  ciudad              String          @db.VarChar(100)
  logo                String?         @db.VarChar(255)
  fecha_creacion      DateTime        @default(now())
  fecha_modificacion  DateTime        @updatedAt  
  usuarios            Usuario[]
  clientes            ClienteEmpresa[]
}

enum TipoIdentificacion {
  CEDULA
  CARNE_DE_RESIDENCIA
  PASAPORTE
  IDENTIFICACION_TRIBUTARIA
  RUC
}

enum SituacionTributaria {
  CONTRIBUYENTE
  NO_CONTRIBUYENTE
  NO_DOMICILIADO
}

model Cliente {
  id                    Int                 @id @default(autoincrement())
  ruc                   String              @db.VarChar(255)
  documento             String              @db.VarChar(255)
  dv                    Int?                @db.TinyInt
  razon_social          String?             @db.VarChar(255)
  tipo_identificacion   TipoIdentificacion
  nombres               String              @db.VarChar(255)
  apellidos             String              @db.VarChar(255)
  pais                  String?             @db.VarChar(255)
  direccion             String?             @db.Text
  email                 String?             @db.VarChar(255)
  telefono              String?             @db.VarChar(20)
  situacion_tributaria  SituacionTributaria
  fecha_creacion        DateTime            @default(now())
  fecha_modificacion    DateTime            @updatedAt
  empresas              ClienteEmpresa[]
}

model ClienteEmpresa {
  @@map("cliente_empresa")
  id                  Int       @id @default(autoincrement())
  cliente             Cliente   @relation(fields: [cliente_id], references: [id])
  cliente_id          Int
  empresa             Empresa   @relation(fields: [empresa_id], references: [id])
  empresa_id          Int
  fecha_creacion      DateTime   @default(now())
  fecha_modificacion  DateTime   @updatedAt
  facturas            Factura[]
}

enum CondicionVenta {
  CONTADO
  CREDITO
}

model Factura {
  id                    Int               @id @default(autoincrement())
  numero_factura        Int
  factura_uuid          String            @db.VarChar(255)
  usuario               Usuario           @relation(fields: [usuario_id], references: [id])
  usuario_id            Int
  cliente_empresa       ClienteEmpresa    @relation(fields: [cliente_empresa_id], references: [id])
  cliente_empresa_id    Int
  fecha_creacion        DateTime          @default(now())
  fecha_modificacion    DateTime          @updatedAt
  condicion_venta       CondicionVenta
  total_iva             Float
  total                 Float
  kude                  String?           @db.Text
  cdc                   String            @db.VarChar(255)
  xml                   String?           @db.Text
  linkqr                String?           @db.Text
  sifen_estado          String?           @db.Text
  sifen_estado_mensaje  String?           @db.Text
  codigo_seguridad      String            @db.VarChar(10)    
  detalles              FacturaDetalle[]
}

enum Tasa {
  T0
  T5
  T10
}

model FacturaDetalle {
  @@map("factura_detalle")
  id                  Int        @id @default(autoincrement())
  factura             Factura    @relation(fields: [id_factura], references: [id])
  id_factura          Int             
  cantidad            Int
  precio_unitario     Float
  tasa                Tasa
  impuesto            Float
  total               Float
  descripcion         String      @db.VarChar(255)
  fecha_creacion      DateTime    @default(now())
  fecha_modificacion  DateTime    @updatedAt
}

model Captcha {
  id                  Int           @id @default(autoincrement())
  captcha             String        @db.VarChar(6)
  ip                  String        @db.VarChar(15)
  fecha_expiracion    DateTime    
}